{"version":3,"file":"static/js/189.71ce13e5.chunk.js","mappings":"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","sources":["components/hooks/hooks.js","components/ContactsForm.jsx","components/Filter.jsx","components/ContactList.jsx","redux/pages/Contacts.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contactsSlice';\nimport { contactsOperations } from '../../redux/contacts/contactsOperations';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoaging = useSelector(state => state.contacts.loader);\n  const error = useSelector(state => state.contacts.error);\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  const getContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  const addContact = data => {\n    dispatch(contactsOperations.addContact(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  return {\n    filter,\n    contacts,\n    isLoaging,\n    error,\n    setFilter,\n    getContacts,\n    addContact,\n    deleteContact,\n  };\n};\n","import style from '../styles.module.css';\n\nimport { useState } from 'react';\nimport { useContacts } from './hooks/hooks';\nimport { infoToast, successToast } from './Toasts';\n\nexport const ContactsForm = () => {\n  const { contacts, addContact } = useContacts();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n    console.log(name, value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const enterContacts = contacts.some(\n      contact =>\n        (contact.name === name.toLowerCase() && contact.number === number) ||\n        contact.number === number\n    );\n    enterContacts\n      ? infoToast(`${name} or ${number} is already in contacts`)\n      : addContact({ name, number });\n    !enterContacts && successToast('the contact is in the list  😃');\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={style.cont__container}>\n      <form className={style.form__container} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"phone number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be at least 5 digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit \" className={style.form__btn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","import style from '../styles.module.css';\nimport { useContacts } from './hooks/hooks';\n\nexport const Filter = () => {\n  const { filter, setFilter } = useContacts();\n  return (\n    <div className={style.cont__container}>\n      <h2 className={style.home__title}>Filter contacts by name</h2>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Find contact by name\"\n        onChange={e => setFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n","import { Loader } from './Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useContacts } from './hooks/hooks';\nimport { contactsOperations } from '../redux/contacts/contactsOperations';\nimport { deleteToast } from './Toasts';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\nimport style from '../styles.module.css';\n\nexport const ContactsList = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const { contacts, isLoaging, filter, deleteContact, setFilter } =\n    useContacts();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <div>\n      {isLoaging && <Loader />}\n      {isLoggedIn && (\n        <ul className={style.items__container}>\n          {contacts &&\n            filteredContacts.map(({ id, name, number }) => {\n              return (\n                <li className={style.item} key={id}>\n                  <h3 className={style.item__name}>{name}:</h3>\n                  <p className={style.item__name}>{number}</p>\n                  <button\n                    className={style.user__btn}\n                    type=\"button\"\n                    onClick={() => {\n                      deleteContact(id);\n                      deleteToast(`${name} tel:${number} is deleted`);\n                      setFilter('');\n                    }}\n                  >\n                    Delete\n                  </button>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import { ContactsForm } from '../../components/ContactsForm';\nimport { Filter } from '../../components/Filter';\nimport { ContactsList } from '../../components/ContactList';\nimport style from '../../styles.module.css';\n\nconst Contacts = () => {\n  return (\n    <div className={style.view__container}>\n      <h2 className={style.home__title}>\n        Enter a name and phone number to add a contact\n      </h2>\n      <ContactsForm />\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["useContacts","dispatch","useDispatch","filter","useSelector","state","contacts","items","isLoaging","loader","error","setFilter","value","changeFilter","getContacts","contactsOperations","addContact","data","deleteContact","id","ContactsForm","_useContacts","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","event","_event$target","target","console","log","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","enterContacts","_context","prev","next","preventDefault","some","contact","toLowerCase","infoToast","concat","successToast","stop","_x","apply","arguments","_jsx","className","style","children","_jsxs","onSubmit","type","placeholder","pattern","title","required","onChange","Filter","e","ContactsList","isLoggedIn","authSelectors","useEffect","filteredContacts","normalizedFilter","includes","findContacts","Loader","map","onClick","deleteToast"],"sourceRoot":""}